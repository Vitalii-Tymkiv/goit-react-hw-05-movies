{"version":3,"file":"static/js/779.c01eb5b8.chunk.js","mappings":"4MACaA,EAAgB,CAC3BC,SAAU,KACVC,MAAO,IACPC,OAAQ,SACRC,WAAW,GAEAC,EAASC,EAAAA,E,sECLTC,E,QAAUC,GAAAA,EAAH,2D,SCCPC,EAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OAAO,SAACH,EAAD,UAAUG,GAClB,C,8JCHYC,EAAOH,EAAAA,GAAAA,GAAH,wGAOJI,EAAOJ,EAAAA,GAAAA,GAAH,iTAWJK,EAASL,EAAAA,GAAAA,EAAH,gJASNM,EAAYN,EAAAA,GAAAA,EAAH,yF,uCC+BtB,EApDgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEUC,EAAAA,EAAAA,IAAgBJ,GAF1B,OAETK,EAFS,OAITC,EAAmBD,EAAWE,QAAQC,KAC1C,YACE,MAAO,CAAEC,GAD8B,EAAtCA,GACYC,OAD0B,EAAlCA,OACgBC,QADkB,EAA1BA,QACiBC,WADS,EAAjBA,WAEvB,IAEHf,EAAWS,GATI,gDAWfP,EAAS,8DAXM,yDAAH,qDAchBI,GACD,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACRjB,EAAAA,EAAAA,eAAsBL,EAAAA,EACvB,GAAE,KAGD,gCACGkB,IAAS,SAACT,EAAA,EAAD,UAAQS,KAClB,SAACP,EAAD,UACGK,EAAQiB,OAAS,EAChBjB,EAAQY,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5BE,EAAO,IAAIC,KAAKH,GACtB,OACE,UAACpB,EAAD,YACE,UAACC,EAAD,YACE,oCACCiB,EAFH,KAEaI,EAAKE,qBAFlB,QAIA,uBAAIL,MALKF,EAQd,KAED,SAACf,EAAD,6DAKT,C,mMCxDKuB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAW,CACfC,OAAQ,CACNC,SAAU,UAIDC,EAAgB,mCAAG,+FACxBC,EADwB,qCACcN,GADd,SAEPC,EAAAA,EAAAA,IAAUK,GAFH,uBAEtBC,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,2CAAH,qDAMhBC,EAAW,mCAAG,WAAMC,GAAN,kFACnBH,EADmB,+BACaN,EADb,kBAC8BS,EAD9B,iCAEFR,EAAAA,EAAAA,IAAUK,EAAOJ,GAFf,uBAEjBK,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,sDAMXG,EAAe,mCAAG,WAAM3B,GAAN,kFACvBuB,EADuB,gBACNvB,EADM,oBACaiB,GADb,SAENC,EAAAA,EAAAA,IAAUK,EAAOJ,GAFX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfI,EAAe,mCAAG,WAAM5B,GAAN,kFACvBuB,EADuB,gBACNvB,EADM,4BACqBiB,GADrB,SAENC,EAAAA,EAAAA,IAAUK,EAAOJ,GAFX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfpB,EAAe,mCAAG,WAAMJ,GAAN,kFACvBuB,EADuB,gBACNvB,EADM,4BACqBiB,EADrB,oBAENC,EAAAA,EAAAA,IAAUK,EAAOJ,GAFX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["Scroll.js","components/Error/Error.styled.js","components/Error/Error.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","moviesAPI.js"],"sourcesContent":["import * as Scroll from 'react-scroll';\nexport const scrollOptions = {\n  duration: 1200,\n  delay: 200,\n  smooth: 'linear',\n  isDynamic: true,\n};\nexport const scroll = Scroll.animateScroll;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  color: red;\n  font-size: 22px;\n`;\n","import { Message } from './Error.styled';\nimport PropTypes from 'prop-types';\n\nexport const Error = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nError.propTypes = {\n  childern: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding: 10px;\n\n  width: 100%;\n  background-color: #26f3fa;\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 1px, rgba(0, 0, 0, 0.07) 0px 2px 2px,\n    rgba(0, 0, 0, 0.07) 0px 4px 4px, rgba(0, 0, 0, 0.07) 0px 8px 8px,\n    rgba(0, 0, 0, 0.07) 0px 16px 16px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n  padding: 8px 0;\n\n  font-size: 18px;\n  font-weight: 500;\n  border-bottom: 1px solid black;\n`;\n\nexport const NoReviews = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 18px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { List, Item, Author, NoReviews } from './Reviews.styled';\nimport { getMovieReviews } from '../../moviesAPI';\nimport { Error } from '../Error/Error';\nimport { scroll, scrollOptions } from '../../Scroll';\n\nconst Reveiws = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReveiws = async () => {\n      try {\n        const allReveiws = await getMovieReviews(movieId);\n\n        const deliveredReviews = allReveiws.results.map(\n          ({ id, author, content, created_at }) => {\n            return { id, author, content, created_at };\n          }\n        );\n        setReviews(deliveredReviews);\n      } catch {\n        setError(\"Movies doesn't respond, or check your internet connection!\");\n      }\n    };\n    getReveiws();\n  }, [movieId]);\n\n  useEffect(() => {\n    scroll.scrollToBottom(scrollOptions);\n  }, []);\n\n  return (\n    <>\n      {error && <Error>{error}</Error>}\n      <List>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content, created_at }) => {\n            const date = new Date(created_at);\n            return (\n              <Item key={id}>\n                <Author>\n                  <b>Author: </b>\n                  {author} ({date.toLocaleDateString()})\n                </Author>\n                <p>{content}</p>\n              </Item>\n            );\n          })\n        ) : (\n          <NoReviews>Files with reviews of this film are empty!</NoReviews>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default Reveiws;\n","import axios from 'axios';\n\nconst API_KEY = 'd210a4e5fa71331bdd85136700dad179';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst axParams = {\n  params: {\n    language: 'en-US',\n  },\n};\n\nexport const getMoviesInTrend = async () => {\n  const axUrl = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl);\n  return data;\n};\n\nexport const searchMovie = async searchQuery => {\n  const axUrl = `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const axUrl = `movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMoviesCredit = async movieId => {\n  const axUrl = `movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const axUrl = `movie/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n"],"names":["scrollOptions","duration","delay","smooth","isDynamic","scroll","Scroll","Message","styled","Error","children","List","Item","Author","NoReviews","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReveiws","getMovieReviews","allReveiws","deliveredReviews","results","map","id","author","content","created_at","length","date","Date","toLocaleDateString","API_KEY","axios","axParams","params","language","getMoviesInTrend","axUrl","data","searchMovie","searchQuery","getMovieDetails","getMoviesCredit"],"sourceRoot":""}