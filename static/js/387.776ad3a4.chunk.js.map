{"version":3,"file":"static/js/387.776ad3a4.chunk.js","mappings":"4MACaA,EAAgB,CAC3BC,SAAU,KACVC,MAAO,IACPC,OAAQ,SACRC,WAAW,GAEAC,EAASC,EAAAA,E,wKCLTC,EAAOC,EAAAA,GAAAA,GAAH,iGAOJC,EAAWD,EAAAA,GAAAA,GAAH,ueAmBRE,EAAQF,EAAAA,GAAAA,IAAH,yDAKLG,EAAOH,EAAAA,GAAAA,IAAH,0C,sCCoCjB,EA7Da,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEOC,EAAAA,EAAAA,IAAgBJ,GAFvB,OAENK,EAFM,OAINC,EAAgBD,EAAKE,KAAKC,KAC9B,YACE,MAAO,CAAEC,GADgC,EAAxCA,GACYC,KAD4B,EAApCA,KACcC,UADsB,EAA9BA,UACmBC,aADW,EAAnBA,aAEvB,IAEHf,EAAUS,GATE,gDAWZP,EAAS,8DAXG,yDAAH,qDAcbI,GACD,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACRd,EAAAA,EAAAA,eAAsBL,EAAAA,EACvB,GAAE,KAGD,gCACGe,IAAS,SAACe,EAAA,EAAD,UAAQf,IACjBF,GACC,SAACN,EAAD,UACGM,EAAOY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,aAAcF,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrC,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEqB,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKN,KAEP,UAAChB,EAAD,YACE,uBAAIgB,KACJ,0BACE,uCACCC,UAbQF,EAkBlB,OAGH,wEAIP,C,sECjEYQ,E,QAAU1B,GAAAA,EAAH,2D,SCCPsB,EAAQ,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACtB,OAAO,SAACD,EAAD,UAAUC,GAClB,C,mMCHKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAW,CACfC,OAAQ,CACNC,SAAU,UAIDC,EAAgB,mCAAG,+FACxBC,EADwB,qCACcN,GADd,SAEPC,EAAAA,EAAAA,IAAUK,GAFH,uBAEtBC,EAFsB,EAEtBA,KAFsB,kBAGvBA,GAHuB,2CAAH,qDAMhBC,EAAW,mCAAG,WAAMC,GAAN,kFACnBH,EADmB,+BACaN,EADb,kBAC8BS,EAD9B,iCAEFR,EAAAA,EAAAA,IAAUK,EAAOJ,GAFf,uBAEjBK,EAFiB,EAEjBA,KAFiB,kBAGlBA,GAHkB,2CAAH,sDAMXG,EAAe,mCAAG,WAAM7B,GAAN,kFACvByB,EADuB,gBACNzB,EADM,oBACamB,GADb,SAENC,EAAAA,EAAAA,IAAUK,EAAOJ,GAFX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMftB,EAAe,mCAAG,WAAMJ,GAAN,kFACvByB,EADuB,gBACNzB,EADM,4BACqBmB,GADrB,SAENC,EAAAA,EAAAA,IAAUK,EAAOJ,GAFX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sDAMfI,EAAe,mCAAG,WAAM9B,GAAN,kFACvByB,EADuB,gBACNzB,EADM,4BACqBmB,EADrB,oBAENC,EAAAA,EAAAA,IAAUK,EAAOJ,GAFX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["Scroll.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","moviesAPI.js"],"sourcesContent":["import * as Scroll from 'react-scroll';\nexport const scrollOptions = {\n  duration: 1200,\n  delay: 200,\n  smooth: 'linear',\n  isDynamic: true,\n};\nexport const scroll = Scroll.animateScroll;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  align-items: center;\n  justify-content: center;\n  flex-basis: calc((100% - 3 * 48px) / 4);\n\n  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 1px, rgba(0, 0, 0, 0.07) 0px 2px 2px,\n    rgba(0, 0, 0, 0.07) 0px 4px 4px, rgba(0, 0, 0, 0.07) 0px 8px 8px,\n    rgba(0, 0, 0, 0.07) 0px 16px 16px;\n  border-radius: 4px;\n\n  overflow: hidden;\n  transform: scale(1);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Info = styled.div`\n  padding: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Error } from '../Error/Error';\nimport { List, ListItem, Image, Info } from './Cast.styled';\nimport { getMoviesCredit } from 'moviesAPI';\nimport brokenPhoto from '../../images/broken_img.png';\nimport { scroll, scrollOptions } from '../../Scroll';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const info = await getMoviesCredit(movieId);\n\n        const deliveredInfo = info.cast.map(\n          ({ id, name, character, profile_path }) => {\n            return { id, name, character, profile_path };\n          }\n        );\n        setActors(deliveredInfo);\n      } catch {\n        setError(\"Movies doesn't respond, or check your internet connection!\");\n      }\n    };\n    getInfo();\n  }, [movieId]);\n\n  useEffect(() => {\n    scroll.scrollToBottom(scrollOptions);\n  }, []);\n\n  return (\n    <>\n      {error && <Error>{error}</Error>}\n      {actors ? (\n        <List>\n          {actors.map(({ id, profile_path, name, character }) => {\n            return (\n              <ListItem key={id}>\n                <Image\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                      : brokenPhoto\n                  }\n                  alt={name}\n                />\n                <Info>\n                  <p>{name}</p>\n                  <p>\n                    <b>Character: </b>\n                    {character}\n                  </p>\n                </Info>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p>Files about actors of this film are empty!</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  color: red;\n  font-size: 22px;\n`;\n","import { Message } from './Error.styled';\nimport PropTypes from 'prop-types';\n\nexport const Error = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nError.propTypes = {\n  childern: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'd210a4e5fa71331bdd85136700dad179';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst axParams = {\n  params: {\n    language: 'en-US',\n  },\n};\n\nexport const getMoviesInTrend = async () => {\n  const axUrl = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl);\n  return data;\n};\n\nexport const searchMovie = async searchQuery => {\n  const axUrl = `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const axUrl = `movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMoviesCredit = async movieId => {\n  const axUrl = `movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const axUrl = `movie/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n"],"names":["scrollOptions","duration","delay","smooth","isDynamic","scroll","Scroll","List","styled","ListItem","Image","Info","useState","actors","setActors","error","setError","movieId","useParams","useEffect","getInfo","getMoviesCredit","info","deliveredInfo","cast","map","id","name","character","profile_path","Error","src","brokenPhoto","alt","Message","children","API_KEY","axios","axParams","params","language","getMoviesInTrend","axUrl","data","searchMovie","searchQuery","getMovieDetails","getMovieReviews"],"sourceRoot":""}