{"version":3,"file":"static/js/774.5b72cc0a.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/PageHeading/PageHeading.styled.js","components/PageHeading/PageHeading.jsx","components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.jsx","moviesAPI.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.p`\n  color: red;\n  font-size: 22px;\n`;\n","import { Message } from './Error.styled';\nimport PropTypes from 'prop-types';\n\nexport const Error = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nError.propTypes = {\n  childern: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  padding: 8px;\n  margin-top: 0;\n  margin-bottom: 32px;\n  border-radius: 8px;\n  color: #fff;\n  font-size: 40px;\n  font-weight: 500;\n  text-align: center;\n  background-image: repeating-linear-gradient(\n    -45deg,\n    #26f3fa,\n    #26f3fa 15px,\n    #b7d0da 15px,\n    #b7d0da 30px\n  );\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './PageHeading.styled';\n\nexport const PageHeading = ({ text }) => {\n  return <PageTitle>{text}</PageTitle>;\n};\n\nPageHeading.propTypes = { text: PropTypes.string.isRequired };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  width: 100%;\n  min-height: 60px;\n\n  text-decoration: none;\n  color: #fff;\n  font-size: 22px;\n  font-weight: 500;\n  background-color: #26f3fa;\n  border-radius: 4px;\n\n  transform: scale(1);\n  box-shadow: none;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #fff;\n    background-color: #c7904e;\n    transform: scale(1.03);\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n\n  > svg {\n    margin-right: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MdLocalMovies } from 'react-icons/md';\nimport { List, StyledLink } from './TrendingMoviesList.styled';\n\nexport const TrendingMoviesList = ({ movies, prevLocation }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return (\n          <li key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: prevLocation }}>\n              <MdLocalMovies size={28}></MdLocalMovies> {original_title}\n            </StyledLink>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nTrendingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  prevLocation: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string,\n    state: PropTypes.string,\n  }),\n};\n","import axios from 'axios';\n\nconst API_KEY = 'd210a4e5fa71331bdd85136700dad179';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst axParams = {\n  params: {\n    language: 'en-US',\n  },\n};\n\nexport const getMoviesInTrend = async () => {\n  const axUrl = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl);\n  return data;\n};\n\nexport const searchMovie = async searchQuery => {\n  const axUrl = `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const axUrl = `movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMoviesCredit = async movieId => {\n  const axUrl = `movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const axUrl = `movie/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n\n  margin-bottom: 32px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n  border-radius: 8px;\n  border: 3px solid #26f3fa;\n  margin-right: 20px;\n  font-size: 20px;\n  outline: transparent;\n  :hover {\n    background-color: #f4f8fa;\n  }\n`;\nexport const Button = styled.button`\n  cursor: pointer;\n  padding: 8px 15px;\n  margin-bottom: 15px;\n  box-shadow: 1px 2px 2px 0 rgb(0, 0, 0/0.5);\n  transition: box-shadow 250ms linear;\n  border-radius: 8px;\n  border: 3px solid #26f3fa;\n  font-weight: bold;\n  align-self: baseline;\n  :hover {\n    background-color: #2196f3;\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Input, Button, Form } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        name=\"search\"\n        type=\"text\"\n        autocomplete=\"off\"\n        placeholder=\"Find movie...\"\n      />\n      <Button>Find</Button>\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { PageHeading } from '../components/PageHeading/PageHeading';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { Error } from '../components/Error/Error';\nimport { TrendingMoviesList } from '../components/TrendingMoviesList/TrendingMoviesList';\nimport { Spinner } from '../components/Spinner/Spinner';\nimport toast from 'react-hot-toast';\nimport { searchMovie } from '../moviesAPI';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    setError(null);\n\n    if (movieName === '') {\n      return;\n    }\n\n    const getMovie = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await searchMovie(movieName);\n\n        const deliveredMovies = movies.results.map(({ id, original_title }) => {\n          return { id, original_title };\n        });\n\n        setMovies(deliveredMovies);\n\n        if (movies.total_results === 0) {\n          setError('Enter correct query!');\n        }\n      } catch {\n        setError(\"Movies doesn't respond, or check your internet connection!\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieName]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n\n    const movieSearch = e.target.search.value;\n    if (movieSearch.trim() === '') {\n      return toast.error('Searchbar is empty! Enter film name!', {\n        duration: 2000,\n        style: {\n          border: '1px solid #3f51b5',\n          padding: '16px',\n          color: '#3f51b5',\n          width: '400px',\n        },\n      });\n    }\n\n    setSearchParams({ query: movieSearch.toLowerCase() });\n    e.currentTarget.reset();\n  };\n\n  return (\n    <main>\n      <PageHeading text=\"Find your movie\" />\n      <SearchBox onSubmit={handleSearch} />\n      {error && <Error>{error}</Error>}\n      {isLoading && <Spinner />}\n      {movies.length > 0 && (\n        <TrendingMoviesList\n          movies={movies}\n          prevLocation={location}\n        ></TrendingMoviesList>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Message","styled","Error","children","PageTitle","PageHeading","text","List","StyledLink","Link","TrendingMoviesList","movies","prevLocation","map","id","original_title","to","state","from","size","API_KEY","axios","axParams","params","language","getMoviesInTrend","axUrl","data","searchMovie","searchQuery","getMovieDetails","movieId","getMoviesCredit","getMovieReviews","Form","Input","Button","SearchBox","onSubmit","name","type","autocomplete","placeholder","useState","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","getMovie","deliveredMovies","results","total_results","e","preventDefault","movieSearch","target","search","value","trim","toast","duration","style","border","padding","color","width","query","toLowerCase","currentTarget","reset","Spinner","length"],"sourceRoot":""}