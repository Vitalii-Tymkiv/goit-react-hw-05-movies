{"version":3,"file":"static/js/983.dfd65081.chunk.js","mappings":"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","sources":["Scroll.js","components/Error/Error.styled.js","components/Error/Error.jsx","moviesAPI.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/AdditionalItems/Additionalitems.styled.js","components/AdditionalItems/AdditionalItems.jsx","components/BackArrowLink/BackArrowLink.styled.js","components/BackArrowLink/BackArrowLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import * as Scroll from 'react-scroll';\nexport const scrollOptions = {\n  duration: 1200,\n  delay: 200,\n  smooth: 'linear',\n  isDynamic: true,\n};\nexport const scroll = Scroll.animateScroll;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  color: red;\n  font-size: 22px;\n`;\n","import { Message } from './Error.styled';\nimport PropTypes from 'prop-types';\n\nexport const Error = ({ children }) => {\n  return <Message>{children}</Message>;\n};\n\nError.propTypes = {\n  childern: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'd210a4e5fa71331bdd85136700dad179';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst axParams = {\n  params: {\n    language: 'en-US',\n  },\n};\n\nexport const getMoviesInTrend = async () => {\n  const axUrl = `trending/movie/day?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl);\n  return data;\n};\n\nexport const searchMovie = async searchQuery => {\n  const axUrl = `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const axUrl = `movie/${movieId}?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMoviesCredit = async movieId => {\n  const axUrl = `movie/${movieId}/credits?api_key=${API_KEY}`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const axUrl = `movie/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const { data } = await axios.get(axUrl, axParams);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 16px;\n`;\nexport const Image = styled.img`\n  display: block;\n  margin-bottom: 16px;\n  width: 300px;\n  height: auto;\n  object-fit: cover;\n`;\nexport const MovieTitle = styled.h2`\n  margin-bottom: 8px;\n`;\n\nexport const Rating = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n\n  width: 70px;\n  height: 40px;\n\n  font-size: 18px;\n  font-weight: 700;\n  color: #fff;\n  background-color: #000000;\n  border-radius: 4px;\n`;\n\nexport const ProdYear = styled.p`\n  font-weight: bold;\n  font-size: 18px;\n  text-transform: Capitalize;\n  margin-bottom: 8px;\n`;\n\nexport const Info = styled.p`\n  margin-bottom: 8px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-weight: bold;\n  margin-bottom: 8px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  list-style: none;\n`;\nexport const Genres = styled.li`\n  padding: 1px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  ProdYear,\n  Genres,\n  GenresList,\n  Image,\n  Info,\n  InfoTitle,\n  MovieTitle,\n  Rating,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ poster, title, vote, overview, year, genres }) => {\n  const getYear = () => new Date(year).getFullYear();\n  return (\n    <Container>\n      <Image src={`https://image.tmdb.org/t/p/w400${poster}`} alt={title} />\n      <div>\n        <MovieTitle>{title}</MovieTitle>\n        <ProdYear>({getYear()})</ProdYear>\n        <InfoTitle>User rating:</InfoTitle>\n        <Rating>{vote}</Rating>\n        <InfoTitle>Overview</InfoTitle>\n        {overview && <Info>{overview}</Info>}\n        <InfoTitle>Genres</InfoTitle>\n        <GenresList>\n          {genres.map(genre => {\n            return <Genres key={genre.name}>{genre.name}</Genres>;\n          })}\n        </GenresList>\n      </div>\n    </Container>\n  );\n};\n\nMovieCard.propTypes = {\n  poster: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div``;\nexport const Heading = styled.h2`\n  margin-bottom: 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n  list-style: none;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 8px;\n  min-width: 100px;\n  height: 40px;\n\n  text-decoration: none;\n  text-align: center;\n  color: inherit;\n\n  font-size: 18px;\n  font-weight: 500;\n  background-color: #225de6;\n  border-radius: 4px;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #fff;\n    background-color: #ddd0d0;\n  }\n\n  &.active {\n    color: #fff;\n    background-color: #ddd0d0;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\n      rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink, List, Heading, Item } from './Additionalitems.styled';\n\nexport const AdditionalItems = ({ location }) => {\n  return (\n    <div>\n      <hr />\n      <Heading>Additional information</Heading>\n      <List>\n        <Item>\n          <StyledLink to=\"cast\" state={{ from: location }}>\n            Cast\n          </StyledLink>\n        </Item>\n        <Item>\n          <StyledLink to=\"reviews\" state={{ from: location }}>\n            Review\n          </StyledLink>\n        </Item>\n      </List>\n      <hr />\n    </div>\n  );\n};\n\nAdditionalItems.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string,\n    state: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px;\n  margin-bottom: 32px;\n\n  text-decoration: none;\n  color: #47351f;\n  font-size: 18px;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #225de6;\n  }\n`;\n","import { StyledLink } from './BackArrowLink.styled';\nimport { TbArrowBack } from 'react-icons/tb';\n\nexport const BackArrowLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <TbArrowBack size=\"32\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../moviesAPI';\nimport { Error } from '../components/Error/Error';\nimport { Spinner } from '../components/Spinner/Spinner';\nimport { MovieCard } from '../components/MovieCard/MovieCard';\nimport { AdditionalItems } from 'components/AdditionalItems/AdditionalItems';\nimport { BackArrowLink } from '../components/BackArrowLink/BackArrowLink';\nimport { scroll, scrollOptions } from '../Scroll';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setError(null);\n\n    const getMovieInfo = async () => {\n      try {\n        const {\n          poster_path,\n          original_title,\n          vote_average,\n          overview,\n          release_date,\n          genres,\n        } = await getMovieDetails(movieId);\n\n        const deliveredMovieInfo = {\n          poster_path,\n          original_title,\n          vote_average,\n          overview,\n          release_date,\n          genres,\n        };\n        setMovie(deliveredMovieInfo);\n      } catch {\n        setError(\"Movies doesn't respond, or check your internet connection!\");\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  useEffect(() => {\n    scroll.scrollToBottom(scrollOptions);\n  }, []);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <main>\n      {error && <Error>{error}</Error>}\n      <BackArrowLink to={backLinkHref}>Go back</BackArrowLink>\n      {movie !== {} && (\n        <MovieCard\n          poster={movie.poster_path}\n          title={movie.original_title}\n          vote={movie.vote_average}\n          overview={movie.overview}\n          year={movie.release_date}\n          genres={movie.genres}\n        ></MovieCard>\n      )}\n\n      <AdditionalItems location={backLinkHref} />\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["scrollOptions","duration","delay","smooth","isDynamic","scroll","Scroll","Message","styled","Error","children","API_KEY","axios","axParams","params","language","getMoviesInTrend","axUrl","data","searchMovie","searchQuery","getMovieDetails","movieId","getMoviesCredit","getMovieReviews","Container","Image","MovieTitle","Rating","ProdYear","Info","InfoTitle","GenresList","Genres","MovieCard","poster","title","vote","overview","year","genres","src","alt","Date","getFullYear","map","genre","name","Heading","List","Item","StyledLink","Link","AdditionalItems","location","to","state","from","BackArrowLink","size","useState","movie","setMovie","error","setError","useParams","backLinkHref","useLocation","useEffect","getMovieInfo","poster_path","original_title","vote_average","release_date","Suspense","fallback","Spinner"],"sourceRoot":""}